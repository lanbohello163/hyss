<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxtech.ess.module.gen.mapper.ApiErrorDataMapper">
  <cache type="com.zxtech.platform.utils.cache.mybatis.redis.RedisCache">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
  </cache>
  <resultMap id="BaseResultMap" type="com.zxtech.ess.module.gen.bean.ApiErrorData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="push_data" jdbcType="NVARCHAR" property="push_data" />
    <result column="url" jdbcType="NVARCHAR" property="url" />
    <result column="request_time" jdbcType="TIMESTAMP" property="request_time" />
    <result column="create_timestamp" jdbcType="TIMESTAMP" property="create_timestamp" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, push_data, url, request_time, create_timestamp
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from api_error_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from api_error_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.zxtech.ess.module.gen.bean.ApiErrorData" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into api_error_data (push_data, url, request_time, 
      create_timestamp)
    values (#{push_data,jdbcType=NVARCHAR}, #{url,jdbcType=NVARCHAR}, #{request_time,jdbcType=TIMESTAMP}, 
      #{create_timestamp,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.zxtech.ess.module.gen.bean.ApiErrorData" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into api_error_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="push_data != null">
        push_data,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="request_time != null">
        request_time,
      </if>
      <if test="create_timestamp != null">
        create_timestamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="push_data != null">
        #{push_data,jdbcType=NVARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=NVARCHAR},
      </if>
      <if test="request_time != null">
        #{request_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_timestamp != null">
        #{create_timestamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zxtech.ess.module.gen.bean.ApiErrorData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update api_error_data
    <set>
      <if test="push_data != null">
        push_data = #{push_data,jdbcType=NVARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=NVARCHAR},
      </if>
      <if test="request_time != null">
        request_time = #{request_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_timestamp != null">
        create_timestamp = #{create_timestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zxtech.ess.module.gen.bean.ApiErrorData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update api_error_data
    set push_data = #{push_data,jdbcType=NVARCHAR},
      url = #{url,jdbcType=NVARCHAR},
      request_time = #{request_time,jdbcType=TIMESTAMP},
      create_timestamp = #{create_timestamp,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, push_data, url, request_time, create_timestamp
    from api_error_data
  </select>
  <delete id="deleteBySqlConditions" parameterType="com.zxtech.ess.module.gen.bean.ApiErrorData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from api_error_data
    <where>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(push_data)">
        and push_data = #{push_data,jdbcType=NVARCHAR}
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(url)">
        and url = #{url,jdbcType=NVARCHAR}
      </if>
      <if test="request_time != null">
        and request_time = #{request_time,jdbcType=TIMESTAMP}
      </if>
      <if test="create_timestamp != null">
        and create_timestamp = #{create_timestamp,jdbcType=TIMESTAMP}
      </if>
    </where>
  </delete>
  <select id="selectBySqlConditions" parameterType="com.zxtech.ess.module.gen.bean.ApiErrorData" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, push_data, url, request_time, create_timestamp
    from api_error_data
    <where>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(push_data)">
        and push_data = #{push_data,jdbcType=NVARCHAR}
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(url)">
        and url = #{url,jdbcType=NVARCHAR}
      </if>
      <if test="request_time != null">
        and request_time = #{request_time,jdbcType=TIMESTAMP}
      </if>
      <if test="create_timestamp != null">
        and create_timestamp = #{create_timestamp,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
</mapper>