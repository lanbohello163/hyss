<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

	<!-- 配置mybatis全局设置 -->
	<settings>
		<!-- 是否开启全局缓存 -->
		<setting name="cacheEnabled" value="true" />
		<!-- null字段映射处理 -->
		<setting name="callSettersOnNulls" value="true" />
		<!-- 全局启用或禁用延迟加载，当禁用时，所有关联对象都会即时加载 -->
		<setting name="lazyLoadingEnabled" value="false" />
		<!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性；否则，每种属性将会按需要加载 -->
		<!-- 与spring集成时，只有在service调用get延迟加载属性才可以使用，返回至controller中后再调用会导致sqlSession连接关闭而抛出异常 -->
		<setting name="aggressiveLazyLoading" value="true" />
		<!-- 是否允许单条sql返回多个数据集  (取决于驱动的兼容性) default:true -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 允许JDBC 生成主键，需要驱动器支持，如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行default:false  -->
		<setting name="useGeneratedKeys" value="true" />
	</settings>
	
	<!-- 配置mybatis插件 -->
	<plugins>
		<!-- cache插件 -->
		<plugin interceptor="com.zxtech.ess.app.interceptor.MybatisQueryCacheInterceptor">
		</plugin>
		<!-- 分页插件 -->
		<plugin interceptor="com.github.pagehelper.PageInterceptor">
			<!-- 支持oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby -->
			<property name="helperDialect" value="postgresql" />
			<!-- 启用时，会将RowBounds中的offset参数当成pageNum使用，可以用页码和页面大小两个参数进行分页 -->
			<property name="offsetAsPageNum" value="false" />
			<!-- 启用时，使用RowBounds分页会进行count查询 -->
			<property name="rowBoundsWithCount" value="false" />
			<!-- 启用时，pageSize=0 或者 RowBounds.limit = 0会查出全部结果 -->
			<property name="pageSizeZero" value="false" />
			<!-- 启用时，pageNum<=0时会查询第一页，pageNum>pages（超过总数时），会查询最后一页 -->
			<property name="reasonable" value="true" />
			<!-- 为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值，可以配置 pageNum,pageSize,count,pageSizeZero,reasonable -->
			<property name="params" value="false" />
			<!-- 启用时，支持通过Mapper接口参数来传递分页参数 -->
			<property name="supportMethodsArguments" value="false" />
		</plugin>
	</plugins>

</configuration>